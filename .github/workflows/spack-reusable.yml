name: Reusable Spack workflow 

on:
  workflow_call:

env:
  QT_QPA_PLATFORM: offscreen

jobs:
  main:
    name: Spack build & run
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Linux, Windows or Mac.
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lihpc-computational-geometry/spack-cgcore-mgx:latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2 # seems to be needed by codecov
          submodules: recursive

      - name: Build and install with Spack
        shell: bash
        run: |
          source /spack/share/spack/setup-env.sh 
          spack env activate meshing-env
          # ${{ github.event.repository.name }} represents the name of the project
          spack add ${{ github.event.repository.name }}
          # we use GITHUB_WORKSPACE instead of github.Workspace because in containers it
          # seems to be incorrect (see https://github.com/actions/runner/issues/2058)
          spack develop -p $GITHUB_WORKSPACE --no-clone ${{ github.event.repository.name }}@999
          spack install --no-checksum

      - name: Test C++ lib install
        shell: bash
        run: |
          source /spack/share/spack/setup-env.sh
          spack env activate meshing-env
          spack load ${{ github.event.repository.name }}
          cd test_link/
          cmake -S . -B build_exe
          cmake --build build_exe
          cd build_exe
          ctest
